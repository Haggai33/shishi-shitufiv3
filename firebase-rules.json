{
  "rules": {
    "users": {
      "$userId": {
        ".read": "auth != null && auth.uid === $userId",
        ".write": "auth != null && auth.uid === $userId"
      }
    },
    "events": {
      ".read": "auth != null",
      "$eventId": {
        // --- חוקים על שדות בתוך האירוע ---

        // רק המארגן יכול לכתוב לפרטי האירוע ולתפריט
        "details": {
          ".write": "auth != null && root.child('events').child($eventId).child('organizerId').val() === auth.uid"
        },
        "menuItems": {
          ".write": "auth != null && root.child('events').child($eventId).child('organizerId').val() === auth.uid"
        },
        
        // חוקים שמאפשרים גם למשתתפים לכתוב
        "participants": {
          "$participantId": {
            // משתתף יכול להוסיף/להסיר רק את עצמו
            ".write": "auth != null && auth.uid === $participantId"
          }
        },
        "assignments": {
          "$assignmentId": {
            // משתתף יכול ליצור/למחוק שיבוץ של עצמו, והמארגן יכול למחוק כל שיבוץ
            ".write": "auth != null && ((newData.exists() && newData.child('userId').val() === auth.uid) || (data.exists() && data.child('userId').val() === auth.uid) || (data.exists() && !newData.exists() && root.child('events').child($eventId).child('organizerId').val() === auth.uid))"
          }
        },

        // --- חוקים על שדות השורש של האירוע ---

        // ניתן לכתוב את ה-organizerId רק בעת יצירת האירוע
        "organizerId": {
          ".write": "!data.exists() && newData.val() === auth.uid"
        },
        // מונע ממשתתפים לדרוס שדות אחרים שלא הוגדרו להם הרשאות
        "$other": {
          ".write": "false"
        }
      }
    }
  }
}