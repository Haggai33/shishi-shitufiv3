{
  "rules": {
    // פרטי המארגנים - רק המארגן יכול לקרוא ולשנות את פרטיו
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid"
      }
    },

    // אוסף האירועים הגלובלי
    "events": {
      "$eventId": {
        // --- הרשאות קריאה ---
        // כל משתמש מאומת (גם אנונימי) יכול לקרוא את נתוני האירוע
        ".read": "auth != null",

        // --- הרשאות כתיבה ---
        // יצירה: רק משתמש מאומת שיצר אירוע עם ה-ID של עצמו
        ".create": "auth != null && newData.child('organizerId').val() === auth.uid",
        // עדכון ומחיקה כלליים של האירוע: רק המארגן הבעלים
        ".update": "data.child('organizerId').val() === auth.uid",
        ".delete": "data.child('organizerId').val() === auth.uid",

        // הרשאות כתיבה מפורטות לתתי-אוספים
        "details": {
          ".write": "data.parent().child('organizerId').val() === auth.uid"
        },
        "menuItems": {
          ".write": "data.parent().child('organizerId').val() === auth.uid"
        },
        "participants": {
          "$participantId": {
            // כל משתמש מאומת יכול להוסיף או להסיר את עצמו בלבד
            ".write": "auth != null && $participantId === auth.uid"
          }
        },
        "assignments": {
          "$assignmentId": {
            // מאפשר למשתתף ליצור/למחוק שיבוץ של עצמו, ולמארגן למחוק כל שיבוץ באירוע
            ".write": "auth != null && ( (newData.exists() && newData.child('userId').val() === auth.uid) || (data.child('userId').val() === auth.uid) || (data.exists() && !newData.exists() && root.child('events').child($eventId).child('organizerId').val() === auth.uid) )"
          }
        }
      }
    }
  }
}